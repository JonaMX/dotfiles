call plug#begin('~/.vim/plugged')
Plug 'tpope/vim-rails'
Plug 'vim-ruby/vim-ruby'
Plug 'kchmck/vim-coffee-script'
Plug 'tpope/vim-haml'
Plug 'chrisbra/csv.vim'
Plug 'sheerun/rspec.vim'
Plug 'cakebaker/scss-syntax.vim'
Plug 'hail2u/vim-css3-syntax'
Plug 'pangloss/vim-javascript'
Plug 'benekastah/neomake'
Plug 'janko-m/vim-test'
Plug 'rking/ag.vim'
Plug 'DavidEGx/ctrlp-smarttabs'
Plug 'morhetz/gruvbox'
Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }
Plug 'edkolev/promptline.vim'
Plug 'edkolev/tmuxline.vim'
Plug 'bling/vim-airline'
Plug 'jistr/vim-nerdtree-tabs'
Plug 'christoomey/vim-tmux-navigator'
Plug 'ap/vim-css-color'
Plug 'kien/ctrlp.vim'
Plug 'tpope/vim-endwise'
Plug 'tpope/vim-fugitive'
Plug 'sjl/gundo.vim'
Plug 'michaeljsmith/vim-indent-object'
Plug 'scrooloose/nerdcommenter'
Plug 'ervandew/supertab'
Plug 'tpope/vim-surround'
Plug 'bronson/vim-trailing-whitespace'
Plug 'vim-scripts/ZoomWin'
Plug 'thinca/vim-visualstar'
call plug#end()

let mapleader=","

map <leader>n :NERDTreeToggle<CR>

" find merge conflict markers
nmap <silent> <leader>fc <ESC>/\v^[<=>]{7}( .*\|$)<CR>

if has('gui_running')
  set guifont=Droid\ Sans\ Mono\ for\ Powerline
endif

cmap w!! w !sudo tee >/dev/null %
:imap jj <Esc>

let g:airline_powerline_fonts = 1
let g:pencil_higher_contrast_ui = 0   " 0=low (def), 1=high
let g:airline_theme = 'dark'
"let g:promptline_theme = 'airline'
"
function! AirlineInit()
  "let g:airline_section_a = airline#section#create(['mode', ' '])
  let g:airline_section_b = airline#section#create_left(['î‚ ', 'hunks'])
endfunction
autocmd VimEnter * call AirlineInit()
" Neovim
autocmd! BufWritePost * Neomake

nmap <silent> <leader>t :TestNearest<CR>
nmap <silent> <leader>T :TestFile<CR>
nmap <silent> <leader>a :TestSuite<CR>
nmap <silent> <leader>L :TestLast<CR>
nmap <silent> <leader>g :TestVisit<CR>

:tnoremap <Esc> <C-\><C-n>
:tnoremap <C-h> <C-\><C-n><C-w>h
:tnoremap <C-j> <C-\><C-n><C-w>j
:tnoremap <C-k> <C-\><C-n><C-w>k
:tnoremap <C-l> <C-\><C-n><C-w>l
:nnoremap <C-h> <C-w>h
:nnoremap <C-j> <C-w>j
:nnoremap <C-k> <C-w>k
:nnoremap <C-l> <C-w>l
"

nmap <C-i> :CtrlPSmartTabs<CR>

" Align by the equal sign
 map <C-a> :Tab /=<Enter>

 " Yank to clipboard
 map <S-y> "+y

" Start of the line
map 0 ^

"if exists('$TMUX')
"  set term=screen-256color
"endif

if exists('$ITERM_PROFILE')
  if exists('$TMUX')
    let &t_SI = "\<Esc>[3 q"
    let &t_EI = "\<Esc>[0 q"
  else
    let &t_SI = "\<Esc>]50;CursorShape=1\x7"
    let &t_EI = "\<Esc>]50;CursorShape=0\x7"
  endif
end

function! WrapForTmux(s)
  if !exists('$TMUX')
    return a:s
  endif

  let tmux_start = "\<Esc>Ptmux;"
  let tmux_end = "\<Esc>\\"

  return tmux_start . substitute(a:s, "\<Esc>", "\<Esc>\<Esc>", 'g') . tmux_end
endfunction

let &t_SI .= WrapForTmux("\<Esc>[?2004h")
let &t_EI .= WrapForTmux("\<Esc>[?2004l")

function! XTermPasteBegin()
  set pastetoggle=<Esc>[201~
  set paste
  return ""
endfunction

inoremap <special> <expr> <Esc>[200~ XTermPasteBegin()

colo gruvbox
set background=dark
